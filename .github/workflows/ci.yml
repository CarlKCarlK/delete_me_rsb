name: test

on:
  push:
  schedule:
    - cron: '0 0 1 * *'
  pull_request:
  workflow_dispatch:
    
env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:

  test_rust:
    name: Test Rust
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      #cmk - name: Test Rust
      #   run: cargo test --verbose --no-default-features
      - name: Test Rust 32-bit non-Windows
        if: runner.os != 'Windows'
        run: |
          rustup target add i686-unknown-linux-gnu
          cargo test --verbose --no-default-features --target i686-unknown-linux-gnu
      - name: Test Rust 32-bit Windows
        if: runner.os == 'Windows'
        run: |
          rustup target add i686-pc-windows-gnu
          apt-get install -y libc6-dev-i386 linux-libc-dev libc6-i386 gcc-multilib
          cargo test --verbose --no-default-features --target=i686-pc-windows-gnu
  
  