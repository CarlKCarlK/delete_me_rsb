error[E0271]: type mismatch resolving `<std::array::IntoIter<({integer}, {integer}), 2> as IntoIterator>::Item == RangeInclusive<{integer}>`
 --> tests/ui/bitxor.rs:6:23
  |
6 |     let _c = a.bitxor(b);
  |                ------ ^ expected struct `RangeInclusive`, found tuple
  |                |
  |                required by a bound introduced by this call
  |
  = note: expected struct `RangeInclusive<{integer}>`
              found tuple `({integer}, {integer})`
note: required by a bound in `range_set_int::SortedDisjointIterator::bitxor`
 --> src/sorted_disjoint_iterator.rs
  |
  |         R: IntoIterator<Item = Self::Item>,
  |                         ^^^^^^^^^^^^^^^^^ required by this bound in `range_set_int::SortedDisjointIterator::bitxor`

error[E0277]: the trait bound `std::array::IntoIter<({integer}, {integer}), 2>: SortedDisjoint` is not satisfied
 --> tests/ui/bitxor.rs:6:23
  |
6 |     let _c = a.bitxor(b);
  |                ------ ^ the trait `SortedDisjoint` is not implemented for `std::array::IntoIter<({integer}, {integer}), 2>`
  |                |
  |                required by a bound introduced by this call
  |
  = help: the following other types implement trait `SortedDisjoint`:
            CheckSortedDisjoint<T, I>
            DynSortedDisjoint<'a, T>
            IntoRangesIter<T>
            NotIter<T, I>
            RangesIter<'_, T>
            UnionIter<T, I>
            itertools::tee::Tee<I>
note: required by a bound in `range_set_int::SortedDisjointIterator::bitxor`
 --> src/sorted_disjoint_iterator.rs
  |
  |         R::IntoIter: SortedDisjoint,
  |                      ^^^^^^^^^^^^^^ required by this bound in `range_set_int::SortedDisjointIterator::bitxor`

error[E0271]: expected `std::array::IntoIter<({integer}, {integer}), 2>` to be an iterator that yields `RangeInclusive<_>`, but it yields `({integer}, {integer})`
 --> tests/ui/bitxor.rs:6:16
  |
6 |     let _c = a.bitxor(b);
  |                ^^^^^^ expected struct `RangeInclusive`, found tuple
  |
  = note: expected struct `RangeInclusive<_>`
              found tuple `({integer}, {integer})`
  = note: required for `itertools::tee::Tee<std::array::IntoIter<({integer}, {integer}), 2>>` to implement `SortedDisjoint`
note: required by a bound in `Merge`
 --> src/merge.rs
  |
  |     R: Iterator<Item = RangeInclusive<T>> + SortedDisjoint,
  |                                             ^^^^^^^^^^^^^^ required by this bound in `Merge`

error[E0271]: expected `std::array::IntoIter<({integer}, {integer}), 2>` to be an iterator that yields `RangeInclusive<{integer}>`, but it yields `({integer}, {integer})`
 --> tests/ui/bitxor.rs:6:16
  |
6 |     let _c = a.bitxor(b);
  |                ^^^^^^ expected struct `RangeInclusive`, found tuple
  |
  = note: expected struct `RangeInclusive<{integer}>`
              found tuple `({integer}, {integer})`
note: required by a bound in `Merge`
 --> src/merge.rs
  |
  |     R: Iterator<Item = RangeInclusive<T>> + SortedDisjoint,
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Merge`

error[E0271]: expected `std::array::IntoIter<({integer}, {integer}), 2>` to be an iterator that yields `RangeInclusive<_>`, but it yields `({integer}, {integer})`
 --> tests/ui/bitxor.rs:6:16
  |
6 |     let _c = a.bitxor(b);
  |                ^^^^^^ expected struct `RangeInclusive`, found tuple
  |
  = note: expected struct `RangeInclusive<_>`
              found tuple `({integer}, {integer})`
  = note: required for `itertools::tee::Tee<std::array::IntoIter<({integer}, {integer}), 2>>` to implement `SortedDisjoint`
note: required by a bound in `NotIter`
 --> src/not_iter.rs
  |
  |     I: Iterator<Item = RangeInclusive<T>> + SortedDisjoint,
  |                                             ^^^^^^^^^^^^^^ required by this bound in `NotIter`
