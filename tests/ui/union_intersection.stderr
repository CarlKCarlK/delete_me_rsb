error[E0277]: the trait bound `std::array::IntoIter<RangeInclusive<{integer}>, 2>: SortedDisjoint` is not satisfied
 --> tests/ui/union_intersection.rs:4:14
  |
4 |     let _u = union([[1..=3, 2..=4].into_iter()]);
  |              ^^^^^ the trait `SortedDisjoint` is not implemented for `std::array::IntoIter<RangeInclusive<{integer}>, 2>`
  |
  = help: the following other types implement trait `SortedDisjoint`:
            DynSortedDisjoint<'a, T>
            NotIter<T, I>
            Ranges<'_, T>
            SortedDisjointIter<T, I>
            SortedDisjointWithLenSoFar<T, I>
            itertools::tee::Tee<I>
note: required by a bound in `union`
 --> src/lib.rs
  |
  |     J::IntoIter: SortedDisjoint,
  |                  ^^^^^^^^^^^^^^ required by this bound in `union`

error[E0277]: the trait bound `std::array::IntoIter<RangeInclusive<{integer}>, 2>: SortedStarts` is not satisfied
 --> tests/ui/union_intersection.rs:4:14
  |
4 |     let _u = union([[1..=3, 2..=4].into_iter()]);
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SortedStarts` is not implemented for `std::array::IntoIter<RangeInclusive<{integer}>, 2>`
  |
  = help: the following other types implement trait `SortedStarts`:
            AssumeSortedStarts<T, I>
            DynSortedDisjoint<'a, T>
            NotIter<T, I>
            Ranges<'_, T>
            SortedDisjointIter<T, I>
            SortedDisjointWithLenSoFar<T, I>
            itertools::adaptors::MergeBy<L, R, for<'a, 'b> fn(&'a RangeInclusive<T>, &'b RangeInclusive<T>) -> bool>
            itertools::kmerge_impl::KMergeBy<I, for<'a, 'b> fn(&'a RangeInclusive<T>, &'b RangeInclusive<T>) -> bool>
            itertools::tee::Tee<I>
  = note: required for `itertools::kmerge_impl::KMergeBy<std::array::IntoIter<RangeInclusive<{integer}>, 2>, ...>` to implement `SortedStarts`
note: required by a bound in `SortedDisjointIter`
 --> src/sorted_disjoint_iter.rs
  |
  |     I: Iterator<Item = RangeInclusive<T>> + SortedStarts,
  |                                             ^^^^^^^^^^^^ required by this bound in `SortedDisjointIter`

error[E0277]: the trait bound `std::array::IntoIter<RangeInclusive<{integer}>, 2>: SortedDisjoint` is not satisfied
 --> tests/ui/union_intersection.rs:5:14
  |
5 |     let _i = intersection([[1..=3, 2..=4].into_iter()]);
  |              ^^^^^^^^^^^^ the trait `SortedDisjoint` is not implemented for `std::array::IntoIter<RangeInclusive<{integer}>, 2>`
  |
  = help: the following other types implement trait `SortedDisjoint`:
            DynSortedDisjoint<'a, T>
            NotIter<T, I>
            Ranges<'_, T>
            SortedDisjointIter<T, I>
            SortedDisjointWithLenSoFar<T, I>
            itertools::tee::Tee<I>
note: required by a bound in `intersection`
 --> src/lib.rs
  |
  |     J::IntoIter: SortedDisjoint,
  |                  ^^^^^^^^^^^^^^ required by this bound in `intersection`

error[E0277]: the trait bound `std::array::IntoIter<RangeInclusive<{integer}>, 2>: SortedDisjoint` is not satisfied
 --> tests/ui/union_intersection.rs:5:14
  |
5 |     let _i = intersection([[1..=3, 2..=4].into_iter()]);
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SortedDisjoint` is not implemented for `std::array::IntoIter<RangeInclusive<{integer}>, 2>`
  |
  = help: the following other types implement trait `SortedDisjoint`:
            DynSortedDisjoint<'a, T>
            NotIter<T, I>
            Ranges<'_, T>
            SortedDisjointIter<T, I>
            SortedDisjointWithLenSoFar<T, I>
            itertools::tee::Tee<I>
note: required by a bound in `NotIter`
 --> src/lib.rs
  |
  |     I: Iterator<Item = RangeInclusive<T>> + SortedDisjoint,
  |                                             ^^^^^^^^^^^^^^ required by this bound in `NotIter`
